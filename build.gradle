/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.4/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'signing'
    id 'maven'

}
sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "com.unstoppabledomains.resolution"
archivesBaseName = "resolution"
version = "1.2.2"

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.esaulpaugh:headlong:3.4.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.65.01'

    // Use JUnit test framework
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    testImplementation("junit:junit:4.13")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.6.2")
}

test {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'resolution'
        packaging 'jar'
        // optionally artifactId can be defined here 
        description 'Resolution library that talks with etherium .crypto registry to resolve various information attached to .crypto domain'
        url 'https://github.com/unstoppabledomains/resolution-java'

        scm {
          connection 'scm:git:git://github.com/unstoppabledomains/resolution-java.git'
          developerConnection 'scm:git:ssh://github.com/unstoppabledomains/resolution-java.git'
          url 'https://github.com/unstoppabledomains/resolution-java'
        }

        licenses {
          license {
            name 'MIT License'
            url 'http://www.opensource.org/licenses/mit-license.php'
          }
        }

        developers {
          developer {
            id 'GentelmanJohn'
            name 'Jeyhun'
            email 'johnny@unstoppabledomains.com'
            organization 'com.github.unstoppabledomains'
            organizationUrl 'https://unstoppabledomains.com'
          }
        }
      }
    }
  }
}